@model WebApplication.ViewModels.ArtistViewModel

@{
    ViewData["Title"] = "Items";
}
<h2>@ViewData["Title"].</h2>
<h3>@ViewData["Message"]</h3>




@if(Model == null)
{
    <div>Sorry there was a probleam loading data from the database.</div>
} else
{
    if(Model.ArtistsList.Count() > 0)
    {
    <table class="table">
    <tr>
        <th>Artist Id</th>
        <th>Name</th>
        <th>Albums count</th>
    </tr>
    @foreach (var artist in Model.ArtistsList)
    {
        <tr>
            <td>
               @artist.ArtistId
            </td>
            <td>
               @artist.Name
            </td>
            <td>
                @artist.Album.Count()
            </td>
        </tr>
    }

    </table>
    }
    else 
    {
        <div>Sorry, there is nothing to show!</div>
    }
<form asp-controller="Chinook" asp-action="Performers" method="GET">
    <label asp-for="@Model.SearchTerms">Search terms (separated by comma)</label>
    <input asp-for="@Model.SearchTerms" />
    

    <label asp-for="@Model.SortCol">Sort column</label>
    <select asp-for="SortCol" asp-items="Model.SortColumns" > </select>
    <label asp-for="@Model.SortDir">Sort Direction</label>
    <select asp-for="SortDir" asp-items="Model.SortDirections" > </select>

    <input type="submit" value="Search" />    
    
</form>
    @await Component.InvokeAsync("ListPager", 
            new {
                controllerName = "Chinook", 
                controllerAction = "Performers", 
                totalNumberOfItems = @ViewBag.totalRecords, 
                pageNumber = @ViewBag.pageIndex,
                pageSize = @ViewBag.sizeOfPage, 
                totalNumberOfPages = @ViewBag.totalNumberOfPages, 
                offset =  @ViewBag.offset,
                offsetUpperBound = @ViewBag.offsetUpperBound,
                searchTerms = @ViewBag.searchTerms,   
                sortCol = @ViewBag.sortCol,
                sortDir = @ViewBag.sortDir
            })
}



    